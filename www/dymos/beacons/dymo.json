{
	"@context": "http://tiny.cc/dymo-context",
	"@id": "beacons",
	"@type": "Dymo",
	"cdt": "parallel",
	"parts": [
		{
			"@id": "warped",
			"@type": "Dymo",
			"cdt": "parallel",
			"parts": [
				{
					"@id": "warpedArea0",
					"@type": "Dymo",
					"source": "Region1b_conversationWarped.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0.5
						}
					]
				},
				{
					"@id": "warpedArea1",
					"@type": "Dymo",
					"source": "Region2b_birdSongWarped.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0.5
						}
					]
				},
				{
					"@id": "warpedArea2",
					"@type": "Dymo",
					"source": "Region3b_songA.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0.5
						}
					]
				},
				{
					"@id": "warpedArea3",
					"@type": "Dymo",
					"source": "Region4b_kitchenWarped.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0.5
						}
					]
				},
				{
					"@id": "warpedArea4",
					"@type": "Dymo",
					"source": "Region5b_bandSoundcheckWarped.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0.5
						}
					]
				},
				{
					"@id": "warpedArea5",
					"@type": "Dymo",
					"source": "Region6b_doorWarped.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0.5
						}
					]
				}
			]
		},
		{
			"@id": "clean",
			"@type": "Dymo",
			"cdt": "parallel",
			"parts": [
				{
					"@id": "cleanArea0",
					"@type": "Dymo",
					"source": "Region1a_conversation.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0
						}
					]
				},
				{
					"@id": "cleanArea1",
					"@type": "Dymo",
					"source": "Region2a_birdSong.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0
						}
					]
				},
				{
					"@id": "cleanArea3",
					"@type": "Dymo",
					"source": "Region4a_kitchen.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0
						}
					]
				},
				{
					"@id": "cleanArea4",
					"@type": "Dymo",
					"source": "Region5a_bandSoundcheck.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0
						}
					]
				},
				{
					"@id": "cleanArea5",
					"@type": "Dymo",
					"source": "Region6a_door.m4a",
					"parameters": [
						{
							"@type": "Loop",
							"value": 1
						},
						{
							"@type": "Amplitude",
							"value": 0
						}
					]
				}
			],
			"parameters": [
				{
					"@type": "Amplitude",
					"value": 0
				}
			]
		}
	],
	"mappings": [
		{
			"domainDims": [
				{
					"name": "warpedAmplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea0Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea1Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea2Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea3Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea4Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea5Amplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"a0",
					"a1",
					"a2",
					"a3",
					"a4",
					"a5"
				],
				"body": "return a*(function(){var as=[a0,a1,a2,a3,a4,a5];as.sort(function(a,b){return b-a;});/*console.log('a0'+a0+', as='+as);*/if(a0>=as[2] &&(as[0]<0.99||a0>0.99)){return a0;}else return 0;})();"
			},
			"dymos": [
				"warpedArea0"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "warpedAmplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea0Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea1Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea2Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea3Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea4Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea5Amplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"a0",
					"a1",
					"a2",
					"a3",
					"a4",
					"a5"
				],
				"body": "return a*(function(){var as=[a0,a1,a2,a3,a4,a5];as.sort(function(a,b){return b-a;});/*console.log('a1'+a1+', as='+as);*/if(a1>=as[2] &&(as[0]<0.99||a1>0.99)){return a1;}else return 0;})();"
			},
			"dymos": [
				"warpedArea1"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "warpedAmplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea0Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea1Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea2Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea3Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea4Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea5Amplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"a0",
					"a1",
					"a2",
					"a3",
					"a4",
					"a5"
				],
				"body": "return a*(function(){var as=[a0,a1,a2,a3,a4,a5];as.sort(function(a,b){return b-a;});/*console.log('a2'+a2+', as='+as);*/if(a2>=as[2] &&(as[0]<0.99||a2>0.99)){return a2;}else return 0;})();"
			},
			"dymos": [
				"warpedArea2"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "warpedAmplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea0Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea1Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea2Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea3Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea4Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea5Amplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"a0",
					"a1",
					"a2",
					"a3",
					"a4",
					"a5"
				],
				"body": "return a*(function(){var as=[a0,a1,a2,a3,a4,a5];as.sort(function(a,b){return b-a;});/*console.log('a3'+a3+', as='+as);*/if(a3>=as[2] &&(as[0]<0.99||a3>0.99)){return a3;}else return 0;})();"
			},
			"dymos": [
				"warpedArea3"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "warpedAmplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea0Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea1Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea2Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea3Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea4Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea5Amplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"a0",
					"a1",
					"a2",
					"a3",
					"a4",
					"a5"
				],
				"body": "return a*(function(){var as=[a0,a1,a2,a3,a4,a5];as.sort(function(a,b){return b-a;});/*console.log('a4'+a4+', as='+as);*/if(a4>=as[2] &&(as[0]<0.99||a4>0.99)){return a4;}else return 0;})();"
			},
			"dymos": [
				"warpedArea4"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "warpedAmplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea0Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea1Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea2Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea3Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea4Amplitude",
					"@type": "Parameter"
				},
				{
					"name": "warpedArea5Amplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"a0",
					"a1",
					"a2",
					"a3",
					"a4",
					"a5"
				],
				"body": "return a*(function(){var as=[a0,a1,a2,a3,a4,a5];as.sort(function(a,b){return b-a;});/*console.log('a5'+a5+', as='+as);*/if(a5>=as[2] &&(as[0]<0.99||a5>0.99)){return a5;}else return 0;})();"
			},
			"dymos": [
				"warpedArea5"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "Compass",
					"@type": "Parameter"
				},
				{
					"name": "cleanAmplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"b"
				],
				"body": "return b*0.5*pwl((a-114.96375653207349+180)-360*Math.floor((a-114.96375653207349+180)/360)-180, [-45,0,-15,1,15,1,45,0],0);"
			},
			"dymos": [
				"cleanArea0"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "Compass",
					"@type": "Parameter"
				},
				{
					"name": "cleanAmplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"b"
				],
				"body": "return b*0.5*pwl((a-174+180)-360*Math.floor((a-174+180)/360)-180, [-45,0,-15,1,15,1,45,0],0);"
			},
			"dymos": [
				"cleanArea1"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "Compass",
					"@type": "Parameter"
				},
				{
					"name": "cleanAmplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"b"
				],
				"body": "return b*0.5*pwl((a-294.9637565320735+180)-360*Math.floor((a-294.9637565320735+180)/360)-180, [-45,0,-15,1,15,1,45,0],0);"
			},
			"dymos": [
				"cleanArea3"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "Compass",
					"@type": "Parameter"
				},
				{
					"name": "cleanAmplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"b"
				],
				"body": "return b*0.5*pwl((a-354+180)-360*Math.floor((a-354+180)/360)-180, [-45,0,-15,1,15,1,45,0],0);"
			},
			"dymos": [
				"cleanArea4"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "Compass",
					"@type": "Parameter"
				},
				{
					"name": "cleanAmplitude",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a",
					"b"
				],
				"body": "return b*0.5*pwl((a-53.03624346792651+180)-360*Math.floor((a-53.03624346792651+180)/360)-180, [-45,0,-15,1,15,1,45,0],0);"
			},
			"dymos": [
				"cleanArea5"
			],
			"range": "Amplitude"
		},
		{
			"domainDims": [
				{
					"name": "Clean",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a"
				],
				"body": "return (function(self) { var target = a; if(self.smoothCurrent===undefined || Math.abs(target-self.smoothCurrent)<0.05){self.smoothCurrent=target; if(self.smoothInterval!==undefined && self.smoothInterval!==null){ clearInterval(self.smoothInterval); self.smoothInterval=null; }; } else { self.smoothCurrent=Number(self.smoothCurrent)+(target>self.smoothCurrent ? 0.05 : -0.05); /*console.log('smooth -> '+self.smoothCurrent+' vs '+target);*/ if(self.smoothInterval===undefined || self.smoothInterval===null) {self.smoothInterval = setInterval(function() { /*console.log('smooth!');*/ self.updateParameter(); }, 100); }; }; return self.smoothCurrent; })(this);;"
			},
			"dymos": [
				"beacons"
			],
			"range": "cleanAmplitude"
		},
		{
			"domainDims": [
				{
					"name": "Dirty",
					"@type": "Parameter"
				}
			],
			"function": {
				"args": [
					"a"
				],
				"body": "return (function(self) { var target = a; if(self.smoothCurrent===undefined || Math.abs(target-self.smoothCurrent)<0.05){self.smoothCurrent=target; if(self.smoothInterval!==undefined && self.smoothInterval!==null){ clearInterval(self.smoothInterval); self.smoothInterval=null; }; } else { self.smoothCurrent=Number(self.smoothCurrent)+(target>self.smoothCurrent ? 0.05 : -0.05); /*console.log('smooth -> '+self.smoothCurrent+' vs '+target);*/ if(self.smoothInterval===undefined || self.smoothInterval===null) {self.smoothInterval = setInterval(function() { /*console.log('smooth!');*/ self.updateParameter(); }, 100); }; }; return self.smoothCurrent; })(this);;"
			},
			"dymos": [
				"beacons"
			],
			"range": "warpedAmplitude"
		}
	]
}